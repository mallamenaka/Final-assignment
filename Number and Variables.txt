ASSIGNMENTSTASK ONE: NUMBERS AND VARIABLES1. Create three variables in a single line and assign different values to them and make sure their data types are different. Like one is int, another one is float and the last one is a string.2. x, y, z = 5, 11.5, "Hello world"3. print(x)4. print(y)5. print(z)2. 	Create a variable of value type complex and swap it with another variable whose value is an integer.z = 1j   # complexc = int (z)print(c)3. 	Swap two numbers using the third variable as the result name and do the same task without using any third variable.x = 5y = 10temp = xx = yy = tempprint('The value of x after swapping: {}'.format(x))print('The value of y after swapping: {}'.format(y))Output:The value of x after swapping: 10The value of y after swapping: 5x = 5y = 7  print ("Before swapping: ") print("Value of x : ", x, " and y : ", y)   # code to swap 'x' and 'y' x, y = y, x   print ("After swapping: ") print("Value of x : ", x, " and y : ", y) Output:Before swapping: ('Value of x : ', 5, ' and y : ', 7)After swapping: ('Value of x : ', 7, ' and y : ', 5)4. 	Write a program to print the value given by the user by using both Python 2.x and Python 3.x Version.Python 2value = raw_input("Please enter a string\n")Please enter a stringmencaPython 3value = input("Please enter a string:\n")print(f'You entered {value}')5. 	Write a program to complete the task given below:? Ask the user to enter any 2 numbers in between 1-10 and add both of them to another variable call z.? Use z for adding 30 into it and print the final result by using variable results.? x = int(input('Enter Any Number From 1 to 10.    '))? y = int(input('\nEnter Another Number From 1 to 10.   '))? z = x + y? ? results = z + 30? print(results)6.Write a program to check the data type of the entered values. HINT: Printed output should say -  The input value data type is: int/float/string/etcx= input ("Enter a value:")print('The input value data type is:', type(x))7. 	Create Variable using CamelCase, LadderCase, and UPPERCASE. (Refer:   https://capitalizemytitle.com/camel-case/) - Variable Conventions to writeInput: x= 5lowerCamel- xUpperCamel (Pascal Case)- Xsnake_case- x_56. If one data type value is assigned to ‘a’ variable and then a different data type value is assigned to ‘a’ again. Will it change the value. If Yes then Why?Yes, It works because multiple values can be assigned to a variable in python.7. a=58. print(a)9. a=5.510. print(a)11. Output:55.5 TASK TWO: OPERATORS AND DECISION MAKING STATEMENT1.	Write a program in Python to perform the following operation:? If a number is divisible by 3 it should print “Consultadd” as a string? If a number is divisible by 5 it should print “c” as a string? If a number is divisible by both 3 and 5 it should print “Consultadd Python Training” as a string.? x= int(input ("Enter the value of x:"))? ? if (x%3==0):?     print("consultadd")? ? if (x%5==0):?     print("c")? ? if (x%3==0) and (x%5==0):?     print("Consultadd Python Training")? 2. 	Write a program in Python to perform the following operator based task:? Ask user to choose the following option first:? If User Enter 1 - Addition ? If User Enter 2 - Subtraction? If User Enter 3 - Division? If USer Enter 4 - Multiplication? If User Enter 5 - Average? Ask users to enter the 2 numbers in a variable for first and second for the first 4 options mentioned above.? Ask the user to enter two more numbers as first and second2 for calculating the average as soon as the user chooses an option 5.? At the end if the answer of any operation is Negative print a statement saying “NEGATIVE”? NOTE: At a time user can perform one action at a time.? while True:?     value = int(input("Enter the number:"))?     ?     x = int(input("Enter the value of x:"))?     y = int(input("Enter the value of y:"))? ?     if value==1:?         print(x + y)? ?     if value==2:?         print(x - y)? ?     if value==3:?         print(x // y)? ?     if value==4:?         print(x * y)? ?     if value==5:?         print((x + y)//2)? ?     else:?         print("NEGATIVE")    3. Write a program in Python to implement the given flowchart:a, b, c = 10, 20, 30avg = (a + b + c)/3print('avg = ', avg)if (avg > a) and (avg > b) and (avg > c):            print('avg is higher than a, b, c')if (avg > a) and (avg > b):    print('avg is higher than a, b, c')if (avg > a) and (avg > c):    print('avg is higher than a,c')if (avg > b) and (avg > c):    print('avg is higher than b,c')  if (avg > a):    print('avg is higher than a')if (avg > b):    print ('avg is higer than b')if (avg > c):    print('avg is higher than c')else:    print('stop')	4. 	Write a program in Python to break and continue if the following cases occurs:? If user enters a negative number just break the loop and print “It’s Over”? If user enters a positive number just continue in the loop and print “Good Going”? ? while True:?      num=int(input('Enter a value'))?      if num < 0:?          print("it's over")?      break? ?      num=int(input('Enter a value'))?      if num > 0:?          print("good going")?          continue? 5.   Write a program in Python which will find all such numbers which are divisible  by 7 but are not a multiple of 5, between 2000 and 3200.nl=[]for x in range(2000, 3200):    if (x%7==0) and (x%5==0):        nl.append(str(x))print (','.join(nl))6. What is the output of the following code examples??    x=123    	   for i in x:   		print(i)? i = 0while i < 5:    print(i)    i += 1    if i == 3:        breakelse:    print(“error”)? count = 0while True:    print(count)    count += 1    if count >= 5:        Break7. Write a program that prints all the numbers from 0 to 6 except 3 and 6.       Expected output: 0 1 2 4 5Note: Use ‘continue’ statementfor x in range(6):    if (x == 3 or x==6):        continue    print(x)print("\n")    8.  Write a program that accepts a string as an input from the user and calculate the number of digits and letters.     Expected output: consul12     Letters 6     Digits 2user = input(“Enter string with digits in it”)a,b = 0,0for i in range(len(user)):    if(user[i].isalpha()):        a = a + 1    else:        b = b + 1print(“letters :“, a, “\ndigits :“, b)9. Read the two parts of the question below: ?  Write a program such that it asks users to “guess the lucky number”. If the correct number is guessed the program stops, otherwise it continues forever. ? number = input("Guess the lucky number ")? while number != 5:?     print "That is not the lucky number"?     number = input("Guess the lucky number ")? Modify the program so that it asks users whether they want to guess again each time. Use two variables, ‘number’ for the number and ‘answer’ for the answer to the question whether they want to continue guessing. The program stops if the user guesses the correct number or answers “no”. ( The program continues as long as a user has not answered “no” and has not guessed the correct number)? number = -1? again = "yes"? while number != 5 and again != "no":?     number = input("Guess the lucky number: ")?     if number != 5:?         print "That is not the lucky number"?     again = raw_input("Would you like to guess again? ")10. Write a program that asks five times to guess the lucky number. Use a while loop and a counter, such as           		counter=1		While counter <= 5:			print(“Type in the”, counter, “number”			counter=counter+1counter = 1while counter <= 5:    number = input("Guess the " + str(counter) + ". number ")        if number != 5:          print "Try again."        else:          print "Good guess!"        counter = counter +1      else:        print "Game over"    The program asks for five guesses (no matter whether the correct number was guessed or not). If the correct number is guessed, the program outputs “Good guess!”, otherwise it outputs “Try again!”. After the fifth guess it stops and prints “Game over!”.11. In the previous question, insert “break” after the “Good guess!” print statement. “break” will terminate the while loop so that users do not have to continue guessing after they found the number. If the user does not guess the number at all, print “Sorry but that was not very successful”.counter = 1      while counter <= 5:        number = input("Guess the " + str(counter) + ". number ")        if number != 5:          print "Try again."        else:          print "Good guess!"          break        counter = counter +1      else:        print "Sorry but that was not very successful"TASK THREE: DATA STRUCTURES1. Create a list of the 10 elements of four different types of Data Type like int, string, complex and float.List = [10, 20, 14, 5, 6, 7, 8, 9,10, 12]print("\nList of numbers: ")print(List)List = [10.4, 20.1, 14.5, 5.1, 6.2, 7.5, 8.10, 9.65 ,10.1, 12.5]print("\nList of numbers: ")print(List)List = ['python', 'training', 'menca', 'sure', 'bliss', 'class' 'of', 'november']print("\nList of numbers: ")print(List)List = [1j, 2+3j, 5+2j]print("\nList of numbers: ")print(List)